[{"/Users/bibeksapkota/Desktop/loyalty_program-main/frontend/src/App.js":"1","/Users/bibeksapkota/Desktop/loyalty_program-main/frontend/src/home.js":"2"},{"size":3522,"mtime":1607296918000,"results":"3","hashOfConfig":"4"},{"size":7092,"mtime":1647622037123,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o0m4z2",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/bibeksapkota/Desktop/loyalty_program-main/frontend/src/App.js",["11","12","13"],"/Users/bibeksapkota/Desktop/loyalty_program-main/frontend/src/home.js",["14","15","16","17"],"import React, { useState, useEffect } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText,\n    Button,\n    Table\n} from 'reactstrap';\nimport logo from './assests/logo.jpg';\nimport { Alert } from 'reactstrap';\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\n\nconst Home = () => {\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n    const [times, setTimes] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    const [token, setToken, deleteToken] = useCookies([\"mr-token\"]);\n    const [p, setP, deleteP] = useCookies([\"num\"]);\n    const [dashboardClicked, setDashboardClicked] = useState(false);\n    const [congrats, setCongrats] = useState(false);\n    const [warn, setWarn] = useState(false);\n    const [uClick, setUClick] = useState(false);\n    const [uList, setUList] = useState([]);\n    const [lClick, setLClick] = useState(false);\n\n    const logoutClicked = () => {\n        deleteToken([\"mr-token\"]);\n        setLClick(true);\n    }\n\n    const userClicked = () => {\n        const phNum = p[\"num\"]\n        axios\n            .post(\"/getUser\", { Phone: phNum },)\n            .then((response) => {\n                console.log('all users')\n                console.log(response)\n                setUList(response.data)\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        setUClick(true)\n    }\n\n    const onDashboardClicked = () => {\n        setDashboardClicked(true)\n    };\n\n    useEffect(() => {\n        if (!token[\"mr-token\"]) window.location.href = \"/\";\n        if (dashboardClicked && (p[\"num\"] !== '000-000-0000')) {\n            axios\n                .post(\"/visited\", {}, {\n                    headers: { Authorization: `Bearer ${token[\"mr-token\"]}` },\n                })\n                .then((response) => {\n                    console.log('home')\n                    console.log(response)\n                    setName(response.data.updated_user.Name);\n                    setPhone(response.data.updated_user.Phone);\n                    setTimes(response.data.updated_user.Visited);\n                    if (response.data.updated_user.Visited === 5) {\n                        setCongrats(true)\n                    }\n                    if (response.data.updated_user.Visited === 0) {\n                        setWarn(true)\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    }, [token, dashboardClicked, lClick]);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <>\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand style={{ color: \"green\" }} href=\"#\"><img\n                        src={logo}\n                        width=\"30\"\n                        height=\"30\"\n                        alt=\"insideHome\"\n                    />Barber</NavbarBrand>\n                    <NavbarToggler onClick={toggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"mr-auto\" navbar>\n                            <NavItem>\n                                <NavLink\n                                    style={{ color: \"green\" }}\n                                    href=\"#\"\n                                    onClick={onDashboardClicked}\n                                >\n                                    Dashboard\n                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink style={{ color: \"green\" }} href=\"#\">About and Contacts</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <NavbarText style={{ color: \"red\" }} onClick={logoutClicked}>Logout</NavbarText>\n                    </Collapse>\n                </Navbar>\n            </div>\n            {(p[\"num\"] === '000-000-0000') ? (\n                <div>\n                    <Alert style={{ fontSize: '50px' }} color=\"primary\">\n                        WELCOME TO ADMIN PAGE\n      </Alert>\n                </div>) : (\n                    <Alert style={{ fontSize: '50px' }} color=\"primary\">\n                        WELCOME USER <p>{name}</p>\n                    </Alert>\n                )}\n            {(dashboardClicked && (p[\"num\"] !== '000-000-0000')) ? (\n                <div>\n                    <h1>Name: {name}</h1>\n                    <h1>Phone: {phone}</h1>\n                    <h1>Visited times: {times}</h1>\n                </div>\n            ) : null}\n            {congrats ? (\n                <Alert style={{ fontSize: '50px' }} color=\"primary\">\n                    CONGRATULATION YOU HAVE 5 HAIR CUT. NEXT TIME ITS FREE!!\n                </Alert>\n            ) : null}\n            {warn ? (\n                <Alert style={{ fontSize: '50px' }} color=\"danger\">\n                    This is free hair cut. So, this time visited won't be counted.\n                </Alert>\n            ) : null}\n            {(p[\"num\"] === '000-000-0000') ? (\n                <div>\n                    <Button\n                        style={{ color: \"red\", backgroundColor: \"white\" }}\n                        onClick={userClicked}\n                    >Rewards</Button>\n                    <Button\n                        style={{ color: \"red\", backgroundColor: \"white\" }}\n                        onClick={userClicked}\n                    >Get All Users</Button>\n                    \n                    <div>\n                        {uClick ? (\n                            <Table\n                                striped\n                                style={{\n                                    flex: 0.9,\n                                    marginLeft: 20,\n                                    marginTop: 2,\n                                    border: \"1px solid #C0C0C0\",\n                                    textAlign: \"left\",\n                                }}\n                            >\n                                <thead>\n                                    <tr>\n                                        <th>Customer</th>\n                                        <th>Phone</th>\n                                        <th>Visited</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {uList.map((d, index) => (\n                                        <tr key={index}>\n                                            <td>{d.Name}</td>\n                                            <td>{d.Phone}</td>\n                                            <td>{d.Visited}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        ) : null}\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Home;",{"ruleId":"18","severity":1,"message":"19","line":3,"column":42,"nodeType":"20","messageId":"21","endLine":3,"endColumn":47},{"ruleId":"18","severity":1,"message":"22","line":13,"column":10,"nodeType":"20","messageId":"21","endLine":13,"endColumn":20},{"ruleId":"18","severity":1,"message":"23","line":13,"column":22,"nodeType":"20","messageId":"21","endLine":13,"endColumn":35},{"ruleId":"18","severity":1,"message":"24","line":24,"column":19,"nodeType":"20","messageId":"21","endLine":24,"endColumn":27},{"ruleId":"18","severity":1,"message":"25","line":25,"column":15,"nodeType":"20","messageId":"21","endLine":25,"endColumn":19},{"ruleId":"18","severity":1,"message":"26","line":25,"column":21,"nodeType":"20","messageId":"21","endLine":25,"endColumn":28},{"ruleId":"27","severity":1,"message":"28","line":81,"column":8,"nodeType":"29","endLine":81,"endColumn":41,"suggestions":"30"},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'returnData' is assigned a value but never used.","'setReturnData' is assigned a value but never used.","'setToken' is assigned a value but never used.","'setP' is assigned a value but never used.","'deleteP' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'p'. Either include it or remove the dependency array.","ArrayExpression",["31"],{"desc":"32","fix":"33"},"Update the dependencies array to be: [token, dashboardClicked, lClick, p]",{"range":"34","text":"35"},[2592,2625],"[token, dashboardClicked, lClick, p]"]